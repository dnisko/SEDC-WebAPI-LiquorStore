// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(LiquorStoreDbContext))]
    [Migration("20240913125129_addBeverage")]
    partial class addBeverage
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DomainModels.Beverage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Beverages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(6998),
                            DeletedBy = 0,
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Jameson Irish Whiskey, triple distilled for a smooth taste.",
                            ImageUrl = "https://example.com/images/jameson.jpg",
                            ModifiedBy = 1,
                            ModifiedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7028),
                            Name = "Jameson",
                            Price = 29.99m,
                            Quantity = 100,
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7038),
                            DeletedBy = 0,
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Jack Daniel's Tennessee Whiskey, a classic American favorite.",
                            ImageUrl = "https://example.com/images/jackdaniels.jpg",
                            ModifiedBy = 1,
                            ModifiedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7039),
                            Name = "Jack Daniel's",
                            Price = 35.99m,
                            Quantity = 150,
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7042),
                            DeletedBy = 0,
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Johnnie Walker Black Label, a refined blend of Scotch whisky.",
                            ImageUrl = "https://example.com/images/johnniewalker.jpg",
                            ModifiedBy = 1,
                            ModifiedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7043),
                            Name = "Johnnie Walker",
                            Price = 39.99m,
                            Quantity = 120,
                            Type = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7047),
                            DeletedBy = 0,
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Absolut Vodka, pure and smooth, perfect for cocktails.",
                            ImageUrl = "https://example.com/images/absolutvodka.jpg",
                            ModifiedBy = 1,
                            ModifiedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7049),
                            Name = "Absolut Vodka",
                            Price = 19.99m,
                            Quantity = 200,
                            Type = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7051),
                            DeletedBy = 0,
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Havana Club is a Cuban rum, known for its rich flavor and smooth finish.",
                            ImageUrl = "https://example.com/images/havana_club",
                            ModifiedBy = 1,
                            ModifiedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7052),
                            Name = "Havana Club",
                            Price = 25.99m,
                            Quantity = 80,
                            Type = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7057),
                            DeletedBy = 0,
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Classic Coca-Cola, the refreshing taste you love.",
                            ImageUrl = "https://example.com/images/cocacola.jpg",
                            ModifiedBy = 1,
                            ModifiedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7059),
                            Name = "Coca-Cola",
                            Price = 1.99m,
                            Quantity = 300,
                            Type = 2
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7061),
                            DeletedBy = 0,
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Pepsi Cola, bold and refreshing with every sip.",
                            ImageUrl = "https://example.com/images/pepsi.jpg",
                            ModifiedBy = 1,
                            ModifiedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7062),
                            Name = "Pepsi",
                            Price = 1.89m,
                            Quantity = 280,
                            Type = 2
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7064),
                            DeletedBy = 0,
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sprite, lemon-lime soda with a crisp and clean taste.",
                            ImageUrl = "https://example.com/images/sprite.jpg",
                            ModifiedBy = 1,
                            ModifiedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7065),
                            Name = "Sprite",
                            Price = 1.79m,
                            Quantity = 270,
                            Type = 2
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7067),
                            DeletedBy = 0,
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Fanta, fruity and fun with a burst of orange flavor.",
                            ImageUrl = "https://example.com/images/fanta.jpg",
                            ModifiedBy = 1,
                            ModifiedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7069),
                            Name = "Fanta",
                            Price = 1.69m,
                            Quantity = 260,
                            Type = 2
                        },
                        new
                        {
                            Id = 10,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7071),
                            DeletedBy = 0,
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "7-Up, the refreshing lemon-lime soda everyone loves.",
                            ImageUrl = "https://example.com/images/7up.jpg",
                            ModifiedBy = 1,
                            ModifiedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7073),
                            Name = "7-Up",
                            Price = 1.59m,
                            Quantity = 250,
                            Type = 2
                        },
                        new
                        {
                            Id = 11,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7075),
                            DeletedBy = 0,
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Heineken, a world-renowned Dutch lager.",
                            ImageUrl = "https://example.com/images/heineken.jpg",
                            ModifiedBy = 1,
                            ModifiedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7076),
                            Name = "Heineken",
                            Price = 3.99m,
                            Quantity = 220,
                            Type = 3
                        },
                        new
                        {
                            Id = 12,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7078),
                            DeletedBy = 0,
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Budweiser, the King of Beers with a smooth and crisp finish.",
                            ImageUrl = "https://example.com/images/budweiser.jpg",
                            ModifiedBy = 1,
                            ModifiedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7079),
                            Name = "Budweiser",
                            Price = 2.99m,
                            Quantity = 210,
                            Type = 3
                        },
                        new
                        {
                            Id = 13,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7081),
                            DeletedBy = 0,
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Corona Extra, perfect for those sunny beach days.",
                            ImageUrl = "https://example.com/images/corona.jpg",
                            ModifiedBy = 1,
                            ModifiedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7083),
                            Name = "Corona",
                            Price = 4.49m,
                            Quantity = 230,
                            Type = 3
                        },
                        new
                        {
                            Id = 14,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7085),
                            DeletedBy = 0,
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Stella Artois, a Belgian pilsner of premium quality.",
                            ImageUrl = "https://example.com/images/stellaartois.jpg",
                            ModifiedBy = 1,
                            ModifiedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7086),
                            Name = "Stella Artois",
                            Price = 4.29m,
                            Quantity = 240,
                            Type = 3
                        },
                        new
                        {
                            Id = 15,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7088),
                            DeletedBy = 0,
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Guinness, the iconic Irish stout with a rich and creamy flavor.",
                            ImageUrl = "https://example.com/images/guinness.jpg",
                            ModifiedBy = 1,
                            ModifiedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7089),
                            Name = "Guinness",
                            Price = 4.99m,
                            Quantity = 200,
                            Type = 3
                        },
                        new
                        {
                            Id = 16,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7091),
                            DeletedBy = 0,
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Carlsberg, probably the best beer in the world.",
                            ImageUrl = "https://example.com/images/carlsberg.jpg",
                            ModifiedBy = 1,
                            ModifiedOn = new DateTime(2024, 9, 13, 14, 51, 28, 799, DateTimeKind.Local).AddTicks(7092),
                            Name = "Carlsberg",
                            Price = 4.99m,
                            Quantity = 200,
                            Type = 3
                        });
                });

            modelBuilder.Entity("DomainModels.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BeverageId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BeverageId");

                    b.HasIndex("UserId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("DomainModels.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DomainModels.OrderDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BeverageId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BeverageId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("DomainModels.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("DomainModels.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BeverageId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BeverageId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("DomainModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("ConfirmedEmail")
                        .HasColumnType("bit");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DomainModels.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("DomainModels.Cart", b =>
                {
                    b.HasOne("DomainModels.Beverage", "Beverage")
                        .WithMany()
                        .HasForeignKey("BeverageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beverage");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DomainModels.Order", b =>
                {
                    b.HasOne("DomainModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DomainModels.OrderDetails", b =>
                {
                    b.HasOne("DomainModels.Beverage", "Beverage")
                        .WithMany()
                        .HasForeignKey("BeverageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainModels.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beverage");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DomainModels.Payment", b =>
                {
                    b.HasOne("DomainModels.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DomainModels.Review", b =>
                {
                    b.HasOne("DomainModels.Beverage", "Beverage")
                        .WithMany()
                        .HasForeignKey("BeverageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beverage");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DomainModels.UserInfo", b =>
                {
                    b.HasOne("DomainModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DomainModels.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
